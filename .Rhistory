1L, 5L, 4L, 1L, 3L, 2L, 1L), .Label = c("0", "7", "8",
"9", "11"), class = "factor"), X04.19.2013 = structure(c(1L,
1L, 3L, 2L, 1L, 2L, 1L, 1L), .Label = c("0", "3", "10"), class = "factor")), .Names = c("names",
"X04.16.2013", "X04.17.2013", "X04.18.2014", "X04.19.2013"), row.names = c(NA,
-8L), class = "data.frame")
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
first(names)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names)%>%
first(value,0)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
group_by(names)%>%
first(value,0)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names)%>%
first(value)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names)%>%
first
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names)%>%
first()
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names)%>%
first(value)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
summarise(daydiff=date-start)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
select(names,date=as.Date(date),start=as.Date(start))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
select(names,date=as.Date(date, format="X%m.%d.%Y")),start=as.Date(start, format="X%m.%d.%Y")))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
select(names,date=as.Date(date, format="X%m.%d.%Y")),start=as.Date(start, format="%m/%d/%Y")))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.character(key)) %>%
mutate(date=substrRight(date, 10)) %>%
left_join(df) %>%
filter(value==0) %>%
select(names, date=as.Date(date, format="X%m.%d.%Y"), start=as.Date(start, format="%m/%d/%Y") )
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0)
temp<-df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0)
str(temp)
as.Date(df$start, format=%m/%d/%Y)
as.Date(df$start, format="%m/%d/%Y")
df$start<-as.Date(df$start, format="%m/%d/%Y")
temp<-df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0)
str(temp)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0)
mutate (daydiff=date-start)
mutate (daydiff=start-date)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
mutate (daydiff=difftime(lastdate,start.date, unit="days"))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
mutate (daydiff=difftime(date,start, unit="days")) %>%
group_by(names) %>%
first(names)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
mutate (daydiff=difftime(date,start, unit="days")) %>%
group_by(names) %>%
filter(date==min(date))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date==min(date))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date==min(date)) %>%
select(names,date,start) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0)
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date==min(date))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names,start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2<-structure(list(names = structure(1:8, .Label = c("Allison", "Andrew",
"Carl", "Dora", "Hilary", "Louis", "Mary", "Mickey"), class = "factor"),
X04.16.2013 = structure(c(5L, 1L, 7L, 6L, 3L, 2L, 4L, 8L), .Label = c("0",
"18", "2", "4", "5", "6", "8", "9"), class = "factor"), X04.17.2013 = structure(c(4L,
1L, 6L, 3L, 1L, 2L, 5L, 4L), .Label = c("0", "10", "4", "5",
"7", "8"), class = "factor"), X04.18.2014 = structure(c(1L,
1L, 5L, 4L, 1L, 3L, 2L, 1L), .Label = c("0", "7", "8",
"9", "11"), class = "factor"), X04.19.2013 = structure(c(1L,
1L, 3L, 2L, 1L, 2L, 1L, 1L), .Label = c("0", "3", "10"), class = "factor")), .Names = c("names",
"X04.16.2013", "X04.17.2013", "X04.18.2013", "X04.19.2013"), row.names = c(NA,
-8L), class = "data.frame")
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names, start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
filter(X04.16.2013 > 0)
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names, start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
colnames(df2)
df2 %>%
filter(X04.16.2013 > 0) %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names, start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names, start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
df2 %>%
filter(X04.16.2013==0)
df2 %>%
filter(X04.16.2013!=0)
df2 %>%
filter(X04.16.2013!=0) %>%
gather(key,value,2:5) %>%
mutate(date=as.Date(key, format="X%m.%d.%Y")) %>%
left_join(df) %>%
filter(value==0) %>%
group_by(names) %>%
filter(date == nth(date, 1)) %>%
select(names, start, date) %>%
mutate (daydiff=difftime(date,start, unit="days"))
reg<-c("a", "b", "e", "f","g","h")
cluster<-(0,0,1,1,2,2)
weight<-(59,52,46,46,66,18)
df<-data.frame(reg,cluster,weight)
reg<-c("a", "b", "e", "f","g","h")
cluster<-c(0,0,1,1,2,2)
weight<-c(59,52,46,46,66,18)
df<-data.frame(reg,cluster,weight)
gene<-1:7
cluster<-c(0,1,0,2,0,0,1)
df1<-data.frame(gene,cluster)
gene<-1:7
cluster<-c(0,1,0,2,0,0,1)
df1<-data.frame(gene,cluster)
df1
df
?sample
?merge
wheels
wheels
wheels
wheels
wheels
wheels <- read.csv("C:/Users/curley/Dropbox/Work/R/teachingR/IntroR/wheels.csv")
View(wheels)
wheels
wheels
str(wheels)
wheels$day1
wheels$wheel
levels(wheels$wheel) #as wheel was coded as a number, it is not default a 'factor'
unique(wheels$wheel)  # [1] 8 4 1 2 5 6 9 7 3
levels(wheels$strain) #strain is already a factor
str(wheels)
levels(wheels$strain) #strain is already a factor
unique(wheels$strain)  # [1] "B6"       "F1-129B6" "F1-B6129" "S129"     "Swiss"
str(wheels)
wheels$wheel
wheels$wheel <- as.factor(wheels$wheel)
levels(wheels$wheel) #now ok    [1] "1" "2" "3" "4" "5" "6" "7" "8" "9"
unique(wheels$wheel)  # [1] 8 4 1 2 5 6 9 7 3
df <- wheels
ddffggahareh <- wheels
str(df)
df1 = wheels    # I prefer to use   <-
str(df1)
james <-  7
aaron <-  9
getwd() #tells you your default working directory
setwd("C:/Users/curley/Dropbox/Work/R/teachingR/IntroR")
getwd() #tells you your default working directory
setwd("C:/Users/curley/Dropbox/Work/R/teachingR/IntroR")
setwd("C:/Users/curley/Dropbox/Work/R/teachingR/IntroR")  #put your desired folder address here
read.csv("ourdf.csv")
read.csv("ourdf.csv")
ourdf <- read.csv("ourdf.csv")  #works if your top row contains column/variable names
someothername <- read.csv("ourdf.csv")
read.csv("ourdf.csv", header=TRUE)  #this is the default
read.csv("ourdf.csv", header=FALSE)  #doesn't work in this case
str(ourdf)
str(someothername)
read.csv("james1.csv") #whoops
read.csv("james1.csv", header=FALSE) #ok
str(james1)
james1<-read.csv("james1.csv", header=FALSE) #ok
str(james1)
View(wheels)
color<-"blue"
str(color)  # chr "blue"
color<-"blue1"
str(color)  # chr "blue"
color<-"blue"
str(color)  # chr "blue"
length(color)  #[1] 1
colors <- c("blue", "green")
str(colors)
mycolors <- rep(colors,2)
mycolors  # [1] "blue"  "green" "blue"  "green"
mycolors <- rep(colors,5)
mycolors  # [1] "blue"  "green" "blue"  "green" "blue"  "green" "blue"  "green" "blue"  "green"
mycolors <- rep(colors, each=2)
mycolors  # [1] "blue"  "blue"  "green" "green"
mycolors <- rep(colors, each=5)
mycolors  # [1] "blue"  "blue"  "blue"  "blue"  "blue"  "green" "green" "green" "green" "green"
str(mycolors)  #  chr [1:10] "blue" "blue" "blue" "blue" "blue" "green" "green" "green" "green" "green"
colors<-c("blue", "green", "pink", "yellow", "white", "black", "brown", "orange", "red", "purple")  #10 here
str(colors) #chr [1:10] "blue" "green" "pink" "yellow" "white" "black" "brown" "orange" "red" "purple"
length(colors)  # [1] 10
colors
sample(colors)  #we all should have a different first color - check !
set.seed(123)  #you can think of this as pre-determining the random algorithm
sample (colors)  # we should all have pink as first color !
set.seed(29471)
sample (colors)  # we should all have green as first color !
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
sample(colors,2)  #again, all should be different
set.seed(17)
sample(colors,2)  #[1] "green" "red"
set.seed(11)
sample(colors,9)  #[1] "pink"   "blue"   "white"  "red"    "brown"  "orange" "black"  "yellow" "green"
setdiff(colors,mycolors)  # [1] "purple"      setdiff compares two vectors and returns those in 1st but not 2nd argument
set.seed(11)
mycolors<-sample(colors,9)
setdiff(colors,mycolors)  # [1] "purple"      setdiff compares two vectors and returns those in 1st but not 2nd argument
sample(colors,11)   # ERROR !
?sample
sample(colors, 11, replace=TRUE)
sample(colors, 11, replace=T)
set.seed(1001)
mycolors <- sample(colors, 100, replace=T)
shapes<-c("square", "oblong", "diamond", "triangle", "circle", "oval", "star")
set.seed(1233)
myshapes <- sample(shapes,100,replace=T)
myshapes
LETTERS
letters
5
6
1:20
c(1:5, 15:20)
c(1:5, "organge", "pineapple")
c(1:5, "orange", "pineapple")
set.seed(2111)
letters.chosen<-sample(LETTERS,5)
letters.chosen  #[1] "D" "G" "Q" "B" "X"
myletters<-sample(letters.chosen, 100, replace=T)
myletters
set.seed(11)
runif(5) #[1] 0.2772497942 0.0005183129 0.5106083730 0.0140479084 0.0646897766
set.seed(11)
runif(5, min=0, max=100)
set.seed(11)
numbers<-runif(5, min=0, max=100)
numbers
round(numbers,digits=2)  # [1] 27.72  0.05 51.06  1.40  6.47
round(numbers,digits=1)  # [1] 27.7  0.1 51.1  1.4  6.5
round(numbers,digits=0)  # [1] [1] 28  0 51  1  6
round(0.87969869869869698698698698623423423423423423423, digits=10)
set.seed(11)
mynumbers<-round(runif(100, min=0, max=100), digits=0)
mynumbers
mycolors
myshapes
myletters
mynumbers
str(mycolors)
str(myshapes)
str(myletters)
str(mynumbers)
data.frame(mycolors,myshapes,myletters,mynumbers)
data.frame(steven=mycolors,banana=myshapes,history=myletters,newyork=mynumbers)
mydf <- data.frame(mycolors,myshapes,myletters,mynumbers)
View(mydf)
mydf
str(mydf)
mydf$mycolors
mydf$myshapes
mydf$myletters
mydf$mynumbers
a1<-as.character(mydf$myshapes)
a2<-as.vector(mydf$myshapes)
str(a1)
str(a2)
as.matrix(mydf)
df <- data.frame(foo=1:5,bar=c(T,T,F,F,T), animals=c("cat", "pig", "dog", "cow", "armadillo"))
df
mydf
sizes<- c("big", "small")
sizes
mydf$size <- sizes
mydf
mydf$size <- rep(sizes, each=50)
mydf
sizes<- c("big", "small")
sizes
mydf$size <- sizes
mydf
mydf$size <- rep(sizes, each=50)
mydf
set.seed(110)
newnumbers<-round( runif(100, min=0, max=1) ,digits=1)
newnumbers
library(dplyr)
mydf
mydf %>%
mutate (score = newnumbers)
mydf
2+2
2                       +
2
mydf<-mydf %>% mutate (score = newnumbers)
mydf
View(mydf)
head(mydf)
head(mydf, 10)
head(mydf, 3)
head(mydf)
tail(mydf)
colnames(mydf) #[1] "mycolors"  "myshapes"  "myletters" "mynumbers" "size"       "score"
colnames(mydf) #[1] "mycolors"  "myshapes"  "myletters" "mynumbers" "size"       "score"
engsoccerdata <- read.csv("C:/Users/curley/Dropbox/Work/R/soccer/engsoccerdata/data/engsoccerdata.csv")
View(engsoccerdata)
df <- engsoccerdata
colnames(df)
library(dplyr)
head(df)
df %>%
filter (home=="Aston Villa") %>%
group_by(visitor) %>%
tally
df %>%
filter (home=="Aston Villa") %>%
group_by(visitor) %>%
tally %>%
arrange (desc(n))
df %>%
filter(home=="Aston Villa" & visitor=="York City")
select(Season,home,visitor,FT)
df %>%
group_by(Season, tier) %>%
summarize(sumgoals=sum(totgoal))
